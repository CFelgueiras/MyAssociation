/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myassociation.ui;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import myassociation.controller.AssociationController;
import myassociation.model.Association;

/**
 *
 * @author Cláudio Felgueiras
 */
public class AssociationSettings extends javax.swing.JFrame {

    private static final long serialVersionUID = -7529338988103187213L;

    private AssociationController associationController = new AssociationController();
    private File ficheiro;
    private BufferedImage logo;
    private Association associacao;
    private final Object[] joptionpaneoptions = {"Sim", "Não"};

    /**
     * Creates new form Association
     */
    public AssociationSettings() {
        initComponents();
        associacao = associationController.obterAssociacao();
        setDados();
        logo = createImageFromBytes(associacao.getLogotipo());
        this.setIconImage(associationController.applicationIcon());
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jplMainSettings = new javax.swing.JPanel();
        lblMinimize = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();
        jtabbedAssocSettings = new javax.swing.JTabbedPane();
        jplAssociationGeneral = new javax.swing.JPanel();
        txtAssocName = new javax.swing.JTextField();
        lblAssocName = new javax.swing.JLabel();
        lblAssocLogo = new javax.swing.JLabel();
        btnAssocLogo = new javax.swing.JButton();
        btnAssocSave = new javax.swing.JButton();
        jplAssociationMember = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 98, 206));
        setName("frmAssociationSettings"); // NOI18N
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jplMainSettings.setBackground(new java.awt.Color(246, 246, 246));
        jplMainSettings.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255), 2));
        jplMainSettings.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMinimize.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblMinimize.setForeground(new java.awt.Color(0, 98, 206));
        lblMinimize.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMinimize.setText("-");
        lblMinimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblMinimizeMousePressed(evt);
            }
        });
        jplMainSettings.add(lblMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 0, 30, 32));

        lblClose.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblClose.setForeground(new java.awt.Color(0, 98, 206));
        lblClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClose.setText("X");
        lblClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblCloseMousePressed(evt);
            }
        });
        jplMainSettings.add(lblClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 32, 32));

        jtabbedAssocSettings.setBackground(new java.awt.Color(255, 255, 255));
        jtabbedAssocSettings.setForeground(new java.awt.Color(0, 98, 206));
        jtabbedAssocSettings.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jtabbedAssocSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jtabbedAssocSettings.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jplAssociationGeneral.setBackground(new java.awt.Color(246, 246, 246));
        jplAssociationGeneral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jplAssociationGeneral.add(txtAssocName, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 260, 26));

        lblAssocName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAssocName.setForeground(new java.awt.Color(0, 98, 206));
        lblAssocName.setText("Nome da Associação:");
        jplAssociationGeneral.add(lblAssocName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 140, 26));

        lblAssocLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAssocLogo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jplAssociationGeneral.add(lblAssocLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 410, 170));

        btnAssocLogo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAssocLogo.setForeground(new java.awt.Color(0, 98, 206));
        btnAssocLogo.setLabel("Logótipo");
        btnAssocLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssocLogoActionPerformed(evt);
            }
        });
        jplAssociationGeneral.add(btnAssocLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 140, 30));
        btnAssocLogo.getAccessibleContext().setAccessibleName("");

        btnAssocSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAssocSave.setForeground(new java.awt.Color(0, 98, 206));
        btnAssocSave.setText("Guardar");
        btnAssocSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssocSaveActionPerformed(evt);
            }
        });
        jplAssociationGeneral.add(btnAssocSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, 93, 40));

        jtabbedAssocSettings.addTab("Gerais", jplAssociationGeneral);

        jplAssociationMember.setBackground(new java.awt.Color(246, 246, 246));

        javax.swing.GroupLayout jplAssociationMemberLayout = new javax.swing.GroupLayout(jplAssociationMember);
        jplAssociationMember.setLayout(jplAssociationMemberLayout);
        jplAssociationMemberLayout.setHorizontalGroup(
            jplAssociationMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );
        jplAssociationMemberLayout.setVerticalGroup(
            jplAssociationMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );

        jtabbedAssocSettings.addTab("Sócios", jplAssociationMember);

        jplMainSettings.add(jtabbedAssocSettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 440, 370));

        getContentPane().add(jplMainSettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMousePressed
        int selectedOption = JOptionPane.showOptionDialog(this,
                "Deseja mesmo sair?",
                "Definições da Associação",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                joptionpaneoptions,
                joptionpaneoptions[1]);
        if (selectedOption == JOptionPane.YES_OPTION) {
            this.dispose();
        } else {
            setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_lblCloseMousePressed

    private void lblMinimizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMousePressed
        setState(AssociationSettings.ICONIFIED);
    }//GEN-LAST:event_lblMinimizeMousePressed

    private void btnAssocLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssocLogoActionPerformed
        try {
            JFileChooser filechooser = new JFileChooser();
            filechooser.setDialogTitle("Escolha a imagem");
            FileFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "bmp", "png", "tif");
            filechooser.setFileFilter(filter);
            filechooser.setAcceptAllFileFilterUsed(false);
            filechooser.showOpenDialog(this);
            ficheiro = filechooser.getSelectedFile();
            logo = ImageIO.read(ficheiro);
            Image fotodim = logo.getScaledInstance(lblAssocLogo.getWidth(), lblAssocLogo.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon icone = new ImageIcon(fotodim);
            lblAssocLogo.setIcon(icone);
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnAssocLogoActionPerformed

    private void btnAssocSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssocSaveActionPerformed

        try {
            byte[] logotipo = convertImagetoByte(logo);
            boolean associacaoeditada = associationController.editarAssociacao(txtAssocName.getText(), logotipo);
            if (associacaoeditada) {
                JOptionPane.showMessageDialog(null, "Dados da associação alterados com sucesso", "Associação", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao realizar alteração.", "Associação", JOptionPane.ERROR_MESSAGE);
                txtAssocName.setText("MyAssociation");
            }
        } catch (IOException ex) {
            System.out.println(ex);
            Logger.getLogger(AssociationSettings.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAssocSaveActionPerformed
    private void setDados() {
        try {
            txtAssocName.setText(associacao.getNome());
            lblAssocLogo.setIcon(convertBytetoIcon(associacao.getLogotipo()));
        } catch (NullPointerException ex) {
            System.out.println(ex);
        }
    }

    private byte[] convertImagetoByte(BufferedImage foto) throws IOException {
        byte[] fotoinbytes;
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        if (foto == null) {
            fotoinbytes = new byte[0];
        } else if (ficheiro == null) {
            fotoinbytes = associacao.getLogotipo();
        } else {
            try {
                foto = ImageIO.read(ficheiro);

                ImageIO.write(foto, "jpg", baos);
                baos.flush();
                baos.toByteArray();
            } catch (IOException ex) {
                Logger.getLogger(EditMember.class.getName()).log(Level.SEVERE, null, ex);
            }
            fotoinbytes = baos.toByteArray();;
        }
        return fotoinbytes;
    }

    private Icon convertBytetoIcon(byte[] fotografia) {
        ImageIcon icone = null;
        try {
            byte[] byteArray = fotografia;
            BufferedImage theImage = ImageIO.read(new ByteArrayInputStream(byteArray));
            Image fotodim = theImage.getScaledInstance(lblAssocLogo.getWidth(), lblAssocLogo.getHeight(), Image.SCALE_SMOOTH);
            icone = new ImageIcon(fotodim);

        } catch (IOException ex) {
            System.out.println(ex);
        } catch (NullPointerException exep) {
            System.out.println(exep);
        }
        return icone;
    }

    private BufferedImage createImageFromBytes(byte[] fotografia) {
        ByteArrayInputStream bais = new ByteArrayInputStream(fotografia);
        try {
            return ImageIO.read(bais);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssocLogo;
    private javax.swing.JButton btnAssocSave;
    private javax.swing.JPanel jplAssociationGeneral;
    private javax.swing.JPanel jplAssociationMember;
    private javax.swing.JPanel jplMainSettings;
    private javax.swing.JTabbedPane jtabbedAssocSettings;
    private javax.swing.JLabel lblAssocLogo;
    private javax.swing.JLabel lblAssocName;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblMinimize;
    private javax.swing.JTextField txtAssocName;
    // End of variables declaration//GEN-END:variables
}
